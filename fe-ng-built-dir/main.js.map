{"version":3,"sources":["./src/app/components/pages/landing/landing.component.ts","./src/app/components/pages/landing/landing.component.html","./src/app/components/pages/create-exam/create-exam-finish-section/create-exam-finish-section.component.ts","./src/app/components/pages/create-exam/create-exam-finish-section/create-exam-finish-section.component.html","./src/app/components/pages/create-exam/create-exam.component.ts","./src/app/components/pages/create-exam/create-exam.component.html","./src/environments/environment.ts","./src/app/components/pages/create-exam/qa-block/qa-block.component.ts","./src/app/components/pages/create-exam/qa-block/qa-block.component.html","./src/app/utils/constants.ts","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/pages/exams-gallery/exams-gallery.component.ts","./src/app/components/pages/exams-gallery/exams-gallery.component.html","./src/app/components/pages/index.ts","./src/app/components/pages/create-org/create-org.component.ts","./src/app/components/pages/create-org/create-org.component.html","./src/app/components/pages/create-exam/create-exam-body-section/create-exam-body-section.component.html","./src/app/components/pages/create-exam/create-exam-body-section/create-exam-body-section.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/qa.service.ts","./src/app/app.module.ts","./src/app/components/pages/create-exam/create-exam-intro-section/create-exam-intro-section.component.ts","./src/app/components/pages/create-exam/create-exam-intro-section/create-exam-intro-section.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/layout/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  visibleCard = ''  // Possible values = 'CREATE_EXAM' 'TAKE_EXAM'\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"landing_page\">\n    <div class=\"giant_text text-center\">I am here to</div>\n    <div class=\"mt-15 text-center\">\n        <button mat-raised-button class=\"mr-5\" (click)=\"visibleCard = 'CREATE_EXAM'\">Create an Exam</button>\n        <button mat-raised-button (click)=\"visibleCard = 'TAKE_EXAM'\">Take an Exam</button>\n\n        <div class=\"action-cards-container\">\n            <!-- CREATE EXAM CARD -->\n            <mat-card class=\"action_card create_exam_card\" [ngClass]=\"{ visible: visibleCard === 'CREATE_EXAM' }\">\n                <mat-icon class=\"close_ico\" (click)=\"visibleCard = ''\">cancel</mat-icon>\n                <p>I want to</p>\n                <ul>\n                    <li><a mat-button routerLink=\"/create-exam\">Create a Single Exam</a></li>\n                    <li><a mat-button routerLink=\"/create-org\">Create an Organization</a></li>\n                </ul>\n            </mat-card>\n\n            <!-- TAKE EXAM CARD -->\n            <mat-card class=\"action_card  take_exam_card\" [ngClass]=\"{ visible: visibleCard === 'TAKE_EXAM' }\">\n                <mat-icon class=\"close_ico\" (click)=\"visibleCard = ''\">cancel</mat-icon>\n                <p>I have an Exam-Code</p>\n                <div class=\"input_and_button\">\n                    <mat-form-field class=\"mr-5\" fullWidth>\n                        <input type=\"text\" matInput placeholder=\"Enter exam code\">\n                    </mat-form-field>\n                    <button mat-raised-button>\n                        Go\n                        <mat-icon>double_arrow</mat-icon>\n                    </button>\n                </div>\n                <div>\n                    <span>OR</span>\n                </div>\n                <div class=\"mt-5\">\n                    I would like to<a mat-button routerLink=\"/exams-gallery\">Browse all exams</a>\n                </div>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TQPaperFinish } from 'src/app/types/question.types';\n\n@Component({\n  selector: 'app-create-exam-finish-section',\n  templateUrl: './create-exam-finish-section.component.html',\n  styleUrls: ['./create-exam-finish-section.component.scss']\n})\nexport class CreateExamFinishSectionComponent implements OnInit {\n  @Input() qaFinishObj!: TQPaperFinish\n\n  constructor() {\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    Duration: {{qaFinishObj.duration}}\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { TQABlock, TQPaper } from '../../../types/question.types'\nimport { QAService } from '../../../services/qa.service'\n\n@Component({\n    selector: 'app-create-exam',\n    templateUrl: './create-exam.component.html',\n    styleUrls: ['./create-exam.component.scss']\n})\nexport class CreateExamComponent implements OnInit {\n\n    qPaper: TQPaper\n    \n    constructor(private _qaService: QAService) {\n        this.qPaper = _qaService.getNewQPaper()\n        // console.log('this.qaBlocksObj =', this.qaBlocksObj)\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","\r\n<mat-horizontal-stepper>\r\n    <mat-step label=\"Intro\">\r\n        <app-create-exam-intro-section [qaIntroObj]=\"qPaper.intro\"></app-create-exam-intro-section>\r\n    </mat-step>\r\n    <mat-step label=\"Body\">\r\n        <app-create-exam-body-section [qaBlocksObj]=\"qPaper.body\"></app-create-exam-body-section>\r\n    </mat-step>\r\n    <mat-step label=\"Finish\">\r\n        <app-create-exam-finish-section [qaFinishObj]=\"qPaper.finish\"></app-create-exam-finish-section>\r\n    </mat-step>\r\n</mat-horizontal-stepper>\r\n\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TQABlock } from '../../../../types/question.types';\nimport { Q_TYPES } from '../../../../utils/constants'\n\n@Component({\n    selector: 'app-qa-block',\n    templateUrl: './qa-block.component.html',\n    styleUrls: ['./qa-block.component.scss']\n})\nexport class QABlockComponent implements OnInit {\n    @Input() qaBlock: TQABlock | any = {};\n    @Input() qaBlockIndex: number = 0\n\n    Q_TYPES = Q_TYPES\n    ALPHA = 'ABCDEFGHIJ'    // Max no. of options 10\n    MAX_OPTION = 10\n    isCollapsed = false\n\n    constructor() {\n        \n    }\n\n    ngOnInit(): void {\n    }\n\n    addNewOption () {\n        this.qaBlock.options.push('')\n    }\n\n    updateOptionValue (ev: Event, opIndex: number) {\n        this.qaBlock.options[opIndex] = (<HTMLInputElement>ev.target).value\n    }\n\n}\n","<div class=\"top-tag\">\r\n    <span class=\"id no-select\" (click)=\"isCollapsed = !isCollapsed\">\r\n        QA Block {{qaBlockIndex+1}}\r\n        <span class=\"toggler-ico\">\r\n            <mat-icon *ngIf=\"!isCollapsed\">expand_less</mat-icon>\r\n            <mat-icon *ngIf=\"isCollapsed\">expand_more</mat-icon>\r\n        </span>\r\n    </span>\r\n</div>\r\n<mat-card class=\"qa-block\" [ngClass]=\"{ collapsed: isCollapsed }\">\r\n    <div class=\"line-1\">\r\n        <mat-form-field class=\"mat-form-pt-0\">\r\n            <!-- <mat-label>Question Type</mat-label> -->\r\n            <mat-select [(ngModel)]=\"qaBlock.type\">\r\n              <mat-option *ngFor=\"let qType of Q_TYPES\" [value]=\"qType.id\">\r\n                {{qType.text}}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"body\">\r\n        <mat-form-field class=\"question\">\r\n            <mat-label>Question</mat-label>\r\n            <textarea matInput placeholder=\"Type question here...\" rows=\"4\" [(ngModel)]=\"qaBlock.question\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"option\" *ngFor=\"let option of qaBlock.options; let optionIndex = index\">\r\n            <span class=\"op-index\">{{ALPHA[optionIndex]}}. </span>\r\n            <mat-label>Option</mat-label>\r\n            <input matInput placeholder=\"Type option here...\" [value]=\"option\" (change)=\"updateOptionValue($event, optionIndex)\">\r\n            <mat-icon class=\"del-op\">delete</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <button *ngIf=\"qaBlock.options.length < MAX_OPTION\" mat-raised-button (click)=\"addNewOption()\">Add Option</button>\r\n    </div>\r\n</mat-card>\r\n","export const Q_TYPES = [\r\n    { id: 'MCQ_SA', text: 'MCQ - Single Answer' },\r\n    { id: 'MCQ_MA', text: 'MCQ - Multiple Answers' }\r\n  ]","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  currentYear = (new Date()).getFullYear()\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <p class=\"footer\">&copy; Suman Barick | 2020 - {{currentYear}}</p>\n</footer>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exams-gallery',\n  templateUrl: './exams-gallery.component.html',\n  styleUrls: ['./exams-gallery.component.scss']\n})\nexport class ExamsGalleryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>exams-gallery works!</p>\n","import { LandingComponent } from './landing/landing.component'\r\nimport { CreateExamComponent } from './create-exam/create-exam.component'\r\nimport { CreateOrgComponent } from './create-org/create-org.component'\r\nimport { ExamsGalleryComponent } from './exams-gallery/exams-gallery.component'\r\n\r\nexport {\r\n    LandingComponent, CreateExamComponent, CreateOrgComponent, ExamsGalleryComponent\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-org',\n  templateUrl: './create-org.component.html',\n  styleUrls: ['./create-org.component.scss']\n})\nexport class CreateOrgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-org works!</p>\n","<h2>Create the Questions and Answers</h2>\n<div>\n    <div *ngFor=\"let qaBlock of getQABlocks();let blockIndex = index\" class=\"qablock-outer mt-15\">\n        <app-qa-block [qaBlock]=\"qaBlock\" [qaBlockIndex]=\"blockIndex\"></app-qa-block>\n    </div>\n    \n    <div class=\"btn-panel mt-30\">\n        <button mat-raised-button color=\"primary\" (click)=\"addNewQABlock()\">Add New QA Block</button>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { QAService } from 'src/app/services/qa.service';\n\n@Component({\n  selector: 'app-create-exam-body-section',\n  templateUrl: './create-exam-body-section.component.html',\n  styleUrls: ['./create-exam-body-section.component.scss']\n})\nexport class CreateExamBodySectionComponent implements OnInit {\n  @Input() qaBlocksObj: any;\n\n  constructor(private _qaService: QAService) { }\n\n  ngOnInit(): void {\n  }\n\n  getQABlocks = () => Object.values(this.qaBlocksObj)\n\n  addNewQABlock = () => {\n      const newQABlockObj = this._qaService.getNewQABlock()\n      this.qaBlocksObj[newQABlockObj.id] = newQABlockObj\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'fe';\n}\n","<app-header></app-header>\n<div class=\"main_container\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { Injectable } from '@angular/core';\nimport { TQPaper, TQABlock } from '../types/question.types'\nimport { Q_TYPES } from '../utils/constants'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QAService {\n\n    constructor() { }\n\n    getNewQPaper (): TQPaper {\n        let newQABlock = this.getNewQABlock()\n        return {\n            id: '_LOCAL_QPaper_' + Date.now() + '_' + Math.random().toString().replace('.', ''),\n            intro: {\n                name: 'New Exam Paper'\n            },\n            body: {\n                [newQABlock.id]: newQABlock\n            },\n            finish: {\n                duration: 1800  // 30 mins exam\n            }\n        }\n    }\n\n    getNewQABlock (): TQABlock {\n        return {\n            id: 'QA_' + Date.now() + '_' + Math.random().toString().replace('.', ''),\n            type: Q_TYPES[0].id,\n            question: '',\n            options: [],\n            ans: ''\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { HeaderComponent, FooterComponent } from './components/layout';\nimport { LandingComponent, CreateExamComponent, CreateOrgComponent, ExamsGalleryComponent } from './components/pages';\nimport { QABlockComponent } from './components/pages/create-exam/qa-block/qa-block.component';\nimport { CreateExamIntroSectionComponent } from './components/pages/create-exam/create-exam-intro-section/create-exam-intro-section.component';\nimport { CreateExamBodySectionComponent } from './components/pages/create-exam/create-exam-body-section/create-exam-body-section.component';\nimport { CreateExamFinishSectionComponent } from './components/pages/create-exam/create-exam-finish-section/create-exam-finish-section.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LandingComponent,\n    CreateExamComponent,\n    CreateOrgComponent,\n    ExamsGalleryComponent,\n    QABlockComponent,\n    CreateExamIntroSectionComponent,\n    CreateExamBodySectionComponent,\n    CreateExamFinishSectionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule ,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatStepperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TQPaperIntro } from 'src/app/types/question.types';\n\n@Component({\n  selector: 'app-create-exam-intro-section',\n  templateUrl: './create-exam-intro-section.component.html',\n  styleUrls: ['./create-exam-intro-section.component.scss']\n})\nexport class CreateExamIntroSectionComponent implements OnInit {\n  @Input() qaIntroObj!: TQPaperIntro\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    Name: {{qaIntroObj.name}}\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <mat-toolbar class=\"header\">\n      <span>&lt;&lt; Exam Faculty &gt;&gt;</span>\n    </mat-toolbar>\n</header>","import { HeaderComponent } from './header/header.component'\r\nimport { FooterComponent } from './footer/footer.component'\r\n\r\nexport {\r\n    HeaderComponent, FooterComponent\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingComponent, CreateExamComponent, CreateOrgComponent, ExamsGalleryComponent } from './components/pages';\n\nconst routes: Routes = [\n  { path: '', component: LandingComponent },\n  { path: 'home', component: LandingComponent },\n  { path: 'create-exam', component: CreateExamComponent },\n  { path: 'create-org', component: CreateOrgComponent },\n  { path: 'exams-gallery', component: ExamsGalleryComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}